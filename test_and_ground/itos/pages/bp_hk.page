page bp_hk

include colors.h

header (1,15,"BP HK TLM")
GBL_GMTOFF                                      (+1, 10, ":value%17[%y-%j-%T.%1f]D:" )

cfs_bp.HK.time                                  (+2, 1, "Packet Time   :v%17f:")
cfs_bp.HK.sequenceCount                         (+,  1, "Pkt Sequence Counter          :v%10d:")
cfs_bp.HK.CmdPc                                 (+,  1, "Commands Processed            :v%10d:")
cfs_bp.HK.CmdEc                                 (+,  1, "Command Errors                :v%10d:")
cfs_bp.HK.EnabledFlowsMask                      (+,  1, "Enabled Flows               0x:v%010x:")
cfs_bp.HK.MemInUse                              (+,  1, "Memory In Use                 :v%10d:")
cfs_bp.HK.MemHighWater                          (+,  1, "Memory High Water             :v%10d:")

cfs_bp.HK.NumFreeFlashBlocks                    (+,  1, "Free Flash Blocks             :v%10d:")
cfs_bp.HK.NumUsedFlashBlocks                    (+,  1, "Used Flash Blocks             :v%10d:")
cfs_bp.HK.NumBadFlashBlocks                     (+,  1, "Bad Flash Blocks              :v%10d:")
cfs_bp.HK.FlashErrorCount                       (+,  1, "Flash Errors                  :v%10d:")
cfs_bp.HK.FilesPending                          (+,  1, "HKT Files Pending             :v%10d:")
cfs_bp.HK.FilesProcessed                        (+,  1, "HKT Files Processed           :v%10d:")
cfs_bp.HK.FilesDropped                          (+,  1, "HKT Files Dropped             :v%10d:")

cfs_bp.HK.FlashSingleBitErrors                  (+,  1, "Flash Single Bit Errors       :v%10d:")
cfs_bp.HK.FlashMultipleBitErrors                (+,  1, "Flash Multiple Bit Errors     :v%10d:")
cfs_bp.HK.FlashReadRetries                      (+,  1, "Flash Read Retries            :v%10d:")
cfs_bp.HK.FlashWriteRetries                     (+,  1, "Flash Write Retries           :v%10d:")
cfs_bp.HK.FlashEraseRetries                     (+,  1, "Flash Erase Retries           :v%10d:")
cfs_bp.HK.FlashLastRetriedBlock                 (+,  1, "Flash Last Retried Block      :v%10d:")

header                                          ( +2, 10,"Bundle Protocol Node Status")

bpn.nodeStatus.validDirectiveCounter            ( +, 1, "Valid Directive Counter     :v%10d:")
bpn.nodeStatus.directiveRejectedCounter         ( +, =, "Directive Rejected Counter  :v%10d:")
bpn.nodeStatus.applicationDataPayloadsSent      ( +, =, "Data Payloads Sent          :v%10d:")
bpn.nodeStatus.applicationDataPayloadsAccepted  ( +, =, "Data Payloads Accepted      :v%10d:")
bpn.nodeStatus.applicationDataPayloadsRejected  ( +, =, "Data Payloads Rejected      :v%10d:")
bpn.nodeStatus.framesAccepted                   ( +, =, "Frames Accepted             :v%10d:")
bpn.nodeStatus.framesRejected                   ( +, =, "Frames Rejected             :v%10d:")
bpn.nodeStatus.bundlesOriginatedAtNode          ( +, =, "Bundles Originated at Node  :v%10d:")
bpn.nodeStatus.bundlesReceivedByNode            ( +, =, "Bundles Received by Node    :v%10d:")
bpn.nodeStatus.bundlesForwardedByNode           ( +, =, "Bundles Forwarded by Node   :v%10d:")
bpn.nodeStatus.bundlesDeliveredToNode           ( +, =, "Bundles Delivered to Node   :v%10d:")
bpn.nodeStatus.custodyRefusedSignalsReceived    ( +, =, "Custody Refused Received    :v%10d:")
bpn.nodeStatus.bundlesReForwarded               ( +, =, "Bundles ReForwarded         :v%10d:")
bpn.nodeStatus.bundlesExpired                   ( +, =, "Bundles Expired             :v%10d:")
bpn.nodeStatus.operationalState                 ( +, =, "Operational State           :v%10s:")
bpn.nodeStatus.nodeSoftwareVersion              ( +, =, "Node Software Version       :v%10s:")

header                                          ( +2, 10,"BPN Socket Status")

bpn.socketStatus.dirInConnState                 ( +, 1, "Directives In             :v%-12s:")
bpn.socketStatus.statOutConnState               ( +, =, "Status Out                :v%-12s:")
bpn.socketStatus.paylInConnState                ( +, =, "Payloads In               :v%-12s:")
bpn.socketStatus.paylOutConnState               ( +, =, "Payloads Out              :v%-12s:")
bpn.socketStatus.framesInConnState              ( +, =, "Frames In                 :v%-12s:")
bpn.socketStatus.bundlesInConnState             ( +, =, "Bundles In                :v%-12s:")
bpn.socketStatus.bundlesOutConnState            ( +, =, "Bundles Out               :v%-12s:")


header (1,75,"BP FLOW TLM")

cfs_bp.FlowHKT.Name                       (4, 50, "Name                   :v%10s:")
cfs_bp.FlowHKT.Enabled                    (+,  =, "Enabled                :v%10s:")
cfs_bp.FlowHKT.Active                     (+,  =, "Active                 :v%10s:")
cfs_bp.FlowHKT.IOSendHealthy              (+,  =, "Send                   :v%10s:")
cfs_bp.FlowHKT.IOReceiveHealthy           (+,  =, "Receive                :v%10s:")
cfs_bp.FlowHKT.IOSendNotReady             (+,  =, "Send Not Ready         :v%10d:")
cfs_bp.FlowHKT.IOBytesSentPerSecond       (+,  =, "Downlink Rate          :v%10d:")
cfs_bp.FlowHKT.IOBytesReceivedPerSecond   (+,  =, "Uplink Rate            :v%10d:")
cfs_bp.FlowHKT.DataInDropped              (+,  =, "Input Data Dropped     :v%10d:")
cfs_bp.FlowHKT.DataOutDropped             (+,  =, "Output Data Dropped    :v%10d:")
cfs_bp.FlowHKT.Timeout                    (+,  =, "Timeout                :v%10u:")
cfs_bp.FlowHKT.Priority                   (+,  =, "Priority               :v%10d:")

cfs_bp.FlowHKT.LibFlagNoncompliant        (+2, =, "Noncompliant           :v%10s:")
cfs_bp.FlowHKT.LibFlagIncomplete          (+,  =, "Incomplete             :v%10s:")
cfs_bp.FlowHKT.LibFlagUnreliableTime      (+,  =, "Unreliable Time        :v%10s:")
cfs_bp.FlowHKT.LibFlagDropped             (+,  =, "Dropped Bundle         :v%10s:")
cfs_bp.FlowHKT.LibFlagFailedIntegrity     (+,  =, "Failed Integrity Check :v%10s:")
cfs_bp.FlowHKT.LibFlagBundleTooLarge      (+,  =, "Bundle Too Large       :v%10s:")
cfs_bp.FlowHKT.LibFlagRouteNeeded         (+,  =, "Route Needed           :v%10s:")
cfs_bp.FlowHKT.LibFlagStoreFailure        (+,  =, "Store Failure          :v%10s:")
cfs_bp.FlowHKT.LibFlagUnknownCid          (+,  =, "Unknown CID            :v%10s:")
cfs_bp.FlowHKT.LibFlagSdnvOverflow        (+,  =, "SDNV Overflow          :v%10s:")
cfs_bp.FlowHKT.LibFlagSdnvIncomplete      (+,  =, "SDNV Incomplete        :v%10s:")
cfs_bp.FlowHKT.LibFlagActiveTableWrap     (+,  =, "Active Table Wrap      :v%10s:")
cfs_bp.FlowHKT.LibFlagDuplicates          (+,  =, "Duplicates             :v%10s:")
cfs_bp.FlowHKT.LibFlagCustodyFull         (+,  =, "Custody Full           :v%10s:")
cfs_bp.FlowHKT.LibFlagUnknownRec          (+,  =, "Unknown Record         :v%10s:")
cfs_bp.FlowHKT.LibInvalidCipherSuite      (+,  =, "Invalid Cipher Suite   :v%10s:")
cfs_bp.FlowHKT.LibInvalidResultType       (+,  =, "Invalid Result Type    :v%10s:")
cfs_bp.FlowHKT.LibInvalidTargetType       (+,  =, "Invalid Target Type    :v%10s:")
cfs_bp.FlowHKT.LibFlagFailedToParse       (+,  =, "Parsing Error          :v%10s:")

cfs_bp.FlowHKT.LibLost                    (+2, =, "Lost (all)             :v%10d:")
cfs_bp.FlowHKT.LibExpired                 (+,  =, "Expired (all)          :v%10d:")
cfs_bp.FlowHKT.LibUnrecognized            (+,  =, "Unrecognized (all)     :v%10d:")
cfs_bp.FlowHKT.LibTransmittedBundles      (+,  =, "Transmitted (bundles)  :v%10d:")
cfs_bp.FlowHKT.LibTransmittedDacs         (+,  =, "Transmitted (dacs)     :v%10d:")
cfs_bp.FlowHKT.LibRetransmittedBundles    (+,  =, "Retransmitted (bundles):v%10d:")
cfs_bp.FlowHKT.LibDeliveredPayloads       (+,  =, "Delivered (payloads)   :v%10d:")
cfs_bp.FlowHKT.LibReceivedBundles         (+,  =, "Received (bundles)     :v%10d:")
cfs_bp.FlowHKT.LibForwardedBundles        (+,  =, "Forwarded (bundles)    :v%10d:")
cfs_bp.FlowHKT.LibReceivedDacs            (+,  =, "Received (dacs)        :v%10d:")
cfs_bp.FlowHKT.LibStoredBundles           (+,  =, "Stored Bundles         :v%10d:")
cfs_bp.FlowHKT.LibStoredPayloads          (+,  =, "Stored Payloads        :v%10d:")
cfs_bp.FlowHKT.LibStoredDacs              (+,  =, "Stored DACS            :v%10d:")
cfs_bp.FlowHKT.LibAcknowledgedBundles     (+,  =, "Acknowledged (bundles) :v%10d:")
cfs_bp.FlowHKT.LibActiveBundles           (+,  =, "Active (bundles)       :v%10d:")

cfs_bp.FlowAUX.Name                       (4, 100, ":v%10s:")
cfs_bp.FlowAUX.Enabled                    (+,   =, ":v%10s:")
cfs_bp.FlowAUX.Active                     (+,   =, ":v%10s:")
cfs_bp.FlowAUX.IOSendHealthy              (+,   =, ":v%10s:")
cfs_bp.FlowAUX.IOReceiveHealthy           (+,   =, ":v%10s:")
cfs_bp.FlowAUX.IOSendNotReady             (+,   =, ":v%10d:")
cfs_bp.FlowAUX.IOBytesSentPerSecond       (+,   =, ":v%10d:")
cfs_bp.FlowAUX.IOBytesReceivedPerSecond   (+,   =, ":v%10d:")
cfs_bp.FlowAUX.DataInDropped              (+,   =, ":v%10d:")
cfs_bp.FlowAUX.DataOutDropped             (+,   =, ":v%10d:")
cfs_bp.FlowAUX.Timeout                    (+,   =, ":v%10u:")
cfs_bp.FlowAUX.Priority                   (+,   =, ":v%10d:")

cfs_bp.FlowAUX.LibFlagNoncompliant        (+2,  =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagIncomplete          (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagUnreliableTime      (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagDropped             (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagFailedIntegrity     (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagBundleTooLarge      (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagRouteNeeded         (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagStoreFailure        (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagUnknownCid          (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagSdnvOverflow        (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagSdnvIncomplete      (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagActiveTableWrap     (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagDuplicates          (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagCustodyFull         (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagUnknownRec          (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibInvalidCipherSuite      (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibInvalidResultType       (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibInvalidTargetType       (+,   =, ":v%10s:")
cfs_bp.FlowAUX.LibFlagFailedToParse       (+,   =, ":v%10s:")

cfs_bp.FlowAUX.LibLost                    (+2,  =, ":v%10d:")
cfs_bp.FlowAUX.LibExpired                 (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibUnrecognized            (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibTransmittedBundles      (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibTransmittedDacs         (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibRetransmittedBundles    (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibDeliveredPayloads       (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibReceivedBundles         (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibForwardedBundles        (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibReceivedDacs            (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibStoredBundles           (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibStoredPayloads          (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibStoredDacs              (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibAcknowledgedBundles     (+,   =, ":v%10d:")
cfs_bp.FlowAUX.LibActiveBundles           (+,   =, ":v%10d:")

